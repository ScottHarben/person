[{"C:\\code\\projects\\person-app\\person-front\\src\\index.js":"1","C:\\code\\projects\\person-app\\person-front\\src\\reportWebVitals.js":"2","C:\\code\\projects\\person-app\\person-front\\src\\App.js":"3","C:\\code\\projects\\person-app\\person-front\\src\\components\\navbar.jsx":"4","C:\\code\\projects\\person-app\\person-front\\src\\components\\signup.jsx":"5","C:\\code\\projects\\person-app\\person-front\\src\\components\\login.jsx":"6","C:\\code\\projects\\person-app\\person-front\\src\\components\\person.jsx":"7","C:\\code\\projects\\person-app\\person-front\\src\\components\\privateRoute.jsx":"8","C:\\code\\projects\\person-app\\person-front\\src\\components\\checkStorageForUser.jsx":"9","C:\\code\\projects\\person-app\\person-front\\src\\components\\activate.jsx":"10","C:\\code\\projects\\person-app\\person-front\\src\\components\\emailNotification.jsx":"11","C:\\code\\projects\\person-app\\person-front\\src\\components\\error.jsx":"12","C:\\code\\projects\\person-app\\person-front\\src\\components\\welcome.jsx":"13","C:\\code\\projects\\person-app\\person-front\\src\\components\\index.jsx":"14"},{"size":571,"mtime":1608168463379,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1657,"mtime":1612560125333,"results":"18","hashOfConfig":"16"},{"size":1249,"mtime":1612560188858,"results":"19","hashOfConfig":"16"},{"size":6962,"mtime":1612560840354,"results":"20","hashOfConfig":"16"},{"size":4592,"mtime":1612560159307,"results":"21","hashOfConfig":"16"},{"size":4828,"mtime":1612211282211,"results":"22","hashOfConfig":"16"},{"size":573,"mtime":1612526763408,"results":"23","hashOfConfig":"16"},{"size":396,"mtime":1611939647959,"results":"24","hashOfConfig":"16"},{"size":542,"mtime":1612554308554,"results":"25","hashOfConfig":"16"},{"size":712,"mtime":1612530475778,"results":"26","hashOfConfig":"16"},{"size":146,"mtime":1612554685111,"results":"27","hashOfConfig":"16"},{"size":686,"mtime":1612527176755,"results":"28","hashOfConfig":"16"},{"size":1030,"mtime":1612560515300,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"lss1fx",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\code\\projects\\person-app\\person-front\\src\\index.js",[],["63","64"],"C:\\code\\projects\\person-app\\person-front\\src\\reportWebVitals.js",[],"C:\\code\\projects\\person-app\\person-front\\src\\App.js",["65"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Index from \"./components/index\";\r\nimport Welcome from \"./components/welcome\";\r\nimport Person from \"./components/person\";\r\nimport Signup from \"./components/signup\";\r\nimport Login from \"./components/login\";\r\nimport Activate from \"./components/activate\";\r\nimport PrivateRoute from \"./components/privateRoute\";\r\nimport checkStorageForUser from \"./components/checkStorageForUser\";\r\nimport Error from \"./components/error\";\r\n\r\nconst axios = require(\"axios\").create({\r\n  baseURL: \"http://localhost:9000\",\r\n});\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const { user } = checkStorageForUser();\r\n    setUser(user);\r\n  }, []);\r\n\r\n  function handleUserChange(user) {\r\n    setUser(user);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar user={user} handleUserChange={handleUserChange} />\r\n      <Switch>\r\n        <PrivateRoute exact path=\"/\">\r\n          <Index user={user} axios={axios} />\r\n        </PrivateRoute>\r\n        <Route path=\"/welcome\">\r\n          <Welcome />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <Signup axios={axios} />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login axios={axios} handleUserChange={handleUserChange} />\r\n        </Route>\r\n        <Route path=\"/activate/:email/:guid\">\r\n          <Activate axios={axios} />\r\n        </Route>\r\n        <Route path=\"/error\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","C:\\code\\projects\\person-app\\person-front\\src\\components\\navbar.jsx",[],"C:\\code\\projects\\person-app\\person-front\\src\\components\\signup.jsx",["66"],"import React, { useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport EmailNotificaiton from \"./emailNotification\";\r\n\r\nexport default function Signup({ axios }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signedUp, setSignedUp] = useState(false);\r\n  const [errors, setErrors] = useState([]);\r\n  const guid = uuidv4();\r\n  let history = useHistory();\r\n\r\n  function handleChange(e) {\r\n    switch (e.target.name) {\r\n      case \"username\":\r\n        setUsername(e.target.value);\r\n        checkLength(\"username\", e.target.value);\r\n        break;\r\n      case \"email\":\r\n        setEmail(e.target.value);\r\n        checkLength(\"email\", e.target.value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(e.target.value);\r\n        checkLength(\"password\", e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function checkLength(errorName, value) {\r\n    let errorList = [...errors];\r\n    const index = errorList.indexOf(errorName);\r\n    if (value.length > 0 && index !== -1) {\r\n      errorList.splice(index, 1);\r\n      setErrors(errorList);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const errorList = await checkForErrors();\r\n    if (errorList.length > 0) {\r\n      return false;\r\n    } else {\r\n      const result = await signup();\r\n      if (result) {\r\n        sendEmail(email, guid);\r\n        // sessionStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        // handleUserChange(response.data);\r\n        history.push(\"/\");\r\n      } else {\r\n        history.push(\"/error\");\r\n      }\r\n    }\r\n  }\r\n\r\n  async function signup() {\r\n    try {\r\n      const response = await axios.post(\"/signup\", {\r\n        Username: username,\r\n        Email: email,\r\n        Password: password,\r\n        GUID: guid,\r\n      });\r\n      if (response.data.affectedRows === 1) {\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async function sendEmail(email, guid) {\r\n    try {\r\n      await axios.post(\"/sendEmail\", {\r\n        Email: email,\r\n        GUID: guid,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async function checkForErrors() {\r\n    let errorList = [];\r\n    if (username === \"\") {\r\n      errorList.push(\"username\");\r\n    }\r\n    if (await checkUsername(username)) {\r\n      errorList.push(\"usernameExists\");\r\n    }\r\n    if (email === \"\") {\r\n      errorList.push(\"email\");\r\n    }\r\n    if (await checkEmail(email)) {\r\n      errorList.push(\"emailExists\");\r\n    }\r\n    if (password === \"\") {\r\n      errorList.push(\"password\");\r\n    }\r\n    setErrors(errorList);\r\n    return errorList;\r\n  }\r\n\r\n  function hasError(key) {\r\n    return errors.indexOf(key) !== -1;\r\n  }\r\n\r\n  async function checkUsername(username) {\r\n    try {\r\n      const response = await axios.get(\"/checkUsername\", {\r\n        params: {\r\n          Username: username,\r\n        },\r\n      });\r\n      const userExists = response.data[0][0];\r\n      if (userExists) {\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(error.response.data);\r\n    }\r\n  }\r\n\r\n  async function checkEmail(email) {\r\n    try {\r\n      const response = await axios.get(\"/checkEmail\", {\r\n        params: {\r\n          Email: email,\r\n        },\r\n      });\r\n      const emailExists = response.data[0][0];\r\n      if (emailExists) {\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(error.response.data);\r\n    }\r\n  }\r\n\r\n  if (signedUp) {\r\n    return (\r\n      <EmailNotificaiton sendEmail={sendEmail} email={email} guid={guid} />\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"card w-25 mt-5 mx-auto\" style={{ maxWidth: \"400px\" }}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title mb-4\">Sign up</h5>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputUsername\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className={\r\n                  hasError(\"username\") || hasError(\"usernameExists\")\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"inputUsername\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={handleChange}\r\n              />\r\n              <div\r\n                className={hasError(\"username\") ? \"invalid-feedback\" : \"d-none\"}\r\n              >\r\n                Username cannot be blank\r\n              </div>\r\n              <div\r\n                className={\r\n                  hasError(\"usernameExists\") ? \"invalid-feedback\" : \"d-none\"\r\n                }\r\n              >\r\n                Username already exists\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputEmail\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className={\r\n                  hasError(\"email\") || hasError(\"emailExists\")\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"inputEmail\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n              />\r\n              <div\r\n                className={hasError(\"email\") ? \"invalid-feedback\" : \"d-none\"}\r\n              >\r\n                Email cannot be blank\r\n              </div>\r\n              <div\r\n                className={\r\n                  hasError(\"emailExists\") ? \"invalid-feedback\" : \"d-none\"\r\n                }\r\n              >\r\n                Email in use by another account\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputPassword\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className={\r\n                  hasError(\"password\")\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"inputPassword\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleChange}\r\n              />\r\n              <div\r\n                className={hasError(\"password\") ? \"invalid-feedback\" : \"d-none\"}\r\n              >\r\n                Password cannot be blank\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Sign up with Email\r\n            </button>{\" \"}\r\n            <div className=\"mt-3\">\r\n              Already have an account?{\" \"}\r\n              <Link className=\"ml-1\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\code\\projects\\person-app\\person-front\\src\\components\\login.jsx",[],"C:\\code\\projects\\person-app\\person-front\\src\\components\\person.jsx",[],"C:\\code\\projects\\person-app\\person-front\\src\\components\\privateRoute.jsx",[],"C:\\code\\projects\\person-app\\person-front\\src\\components\\checkStorageForUser.jsx",[],"C:\\code\\projects\\person-app\\person-front\\src\\components\\activate.jsx",["67"],"import { useEffect } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\n\r\nexport default function Activate({ axios }) {\r\n  let { email, guid } = useParams();\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        await axios.post(\"/activate\", {\r\n          GUID: guid,\r\n        });\r\n      } catch (error) {\r\n        console.error(error); //log errors\r\n      }\r\n    })();\r\n  }, []);\r\n  return (\r\n    <Redirect\r\n      to={{ pathname: \"/login\", state: { userConfirmed: true, email: email } }}\r\n    />\r\n  );\r\n}\r\n","C:\\code\\projects\\person-app\\person-front\\src\\components\\emailNotification.jsx",["68"],"import React from \"react\";\r\n\r\nexport default function EmailNotificaiton({ sendEmail, email, guid }) {\r\n  function handleResend(email, guid) {\r\n    sendEmail(email, guid);\r\n  }\r\n  return (\r\n    <div className=\"container mt-5 jumbotron\">\r\n      <h1 className=\"display-4\">Thank you!</h1>\r\n      <p className=\"lead\">\r\n        A confirmation email has been sent to {email}. Click the link in the\r\n        email activate your account.\r\n      </p>\r\n      {/* <hr className=\"my-4\" />\r\n      <p>Didn't recieve the email?</p>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        onClick={handleResend()}\r\n      >\r\n        Resend verification email\r\n      </button> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\code\\projects\\person-app\\person-front\\src\\components\\error.jsx",[],"C:\\code\\projects\\person-app\\person-front\\src\\components\\welcome.jsx",[],"C:\\code\\projects\\person-app\\person-front\\src\\components\\index.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":10,"column":20,"nodeType":"75","messageId":"76","endLine":10,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":16,"column":6,"nodeType":"80","endLine":16,"endColumn":8,"suggestions":"81"},{"ruleId":"73","severity":1,"message":"82","line":4,"column":12,"nodeType":"75","messageId":"76","endLine":4,"endColumn":24},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Person' is defined but never used.","Identifier","unusedVar","'setSignedUp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axios' and 'guid'. Either include them or remove the dependency array.","ArrayExpression",["85"],"'handleResend' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [axios, guid]",{"range":"88","text":"89"},[411,413],"[axios, guid]"]